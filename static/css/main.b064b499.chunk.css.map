{"version":3,"sources":["/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/spacing.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/typography.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/colors.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/button.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/variables.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/mixins.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/input.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/card.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/avatar.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/idea-detail.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/styles/comments.scss","/Users/caleshapera/sites/hackathon2/hackathon-voting/src/App.scss"],"names":[],"mappings":"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","file":"main.b064b499.chunk.css","sourcesContent":["$spacing: (\n  xs: 4px,\n  s: 8px,\n  m: 12px,\n  l: 20px,\n  xl: 32px,\n);\n\n// Function for setting spacing inside a declaration - e.g. margin-bottom: spacing(xl);\n@function spacing($spacing-size) {\n  @return map-get($spacing, $spacing-size);\n}\n\n// Utility classes - class=\"stack-xl\"\n@each $name, $value in $spacing {\n  .spacing-stack-#{$name} {\n    margin-bottom: $value !important;\n  }\n  .spacing-inline-#{$name} {\n    margin-right: $value !important;\n  }\n  .spacing-insets-#{$name} {\n    padding: $value !important;\n  }\n}\n\n.no-margin-bottom {\n  margin-bottom: 0!important;\n}\n","$font-family: -apple-system, system-ui, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\n// Add your weights here\n$type-weights: (\n  regular: 400,\n  bold: 700\n);\n// Gets a type weight e.g. type-weight(bold);\n@function type-weight($weight) {\n  @return map-get($type-weights, $weight)\n};\n\n$type-colors: (\n  default: color(grey-600),\n  subdued: color(grey-500),\n);\n// Gets the type color e.g. type-color(subdued);\n@function type-color($color) {\n  @return map-get($type-colors, $color)\n};\n\n$type-styles: (\n  body: (\n    font-size: 14px,\n    line-height: 18px,\n    font-weight: type-weight(regular),\n    color: type-color(default)\n  ),\n  h1: (\n    font-size: 20px,\n    line-height: 24px,\n    font-weight: type-weight(bold),\n    color: type-color(default)\n  ),\n  h2: (\n    font-size: 18px,\n    line-height: 22px,\n    font-weight: type-weight(bold),\n    color: type-color(default)\n  ),\n  h3: (\n    font-size: 16px,\n    line-height: 20px,\n    font-weight: type-weight(bold),\n    color: type-color(default)\n  ),\n  small: (\n    font-size: 13px,\n    line-height: 18px,\n  ),\n  subdued: (\n    color: type-color(subdued)\n  ),\n  strong: (\n    font-weight: type-weight(bold)\n  )\n);\n\n@mixin type( $type-style: body, $type-color: null, $type-weight: null ) {\n  @if $type-style {\n    $type-style: map-get($type-styles, $type-style);\n    @if map-has-key($type-style, font-size) {\n      font-size: map-get($type-style, font-size);\n    }\n    @if map-has-key($type-style, font-weight) and not $type-weight {\n      font-weight: map-get($type-style, font-weight);\n    }\n    @if map-has-key($type-style, line-height) {\n      line-height: map-get($type-style, line-height);\n    }\n    @if map-has-key($type-style, color) and not $type-color {\n      color: map-get($type-style, color);\n    }\n    @if map-has-key($type-style, text-transform) {\n      text-transform: map-get($type-style, text-transform);\n    }\n  }\n  @if $type-color {\n    @if map-has-key($type-colors, $type-color) {\n      color: map-get($type-colors, $type-color);\n    }\n  }\n  @if $type-weight {\n    @if map-has-key($type-weights, $type-weight) {\n      font-weight: map-get($type-weights, $type-weight);\n    }\n  }\n}\n\n// Type utility classes - class=\"type-body\"\n@each $name, $value in $type-styles {\n  .type-#{$name} {\n    @include type($name)\n  }\n}\n\nh1,h2,h3,h4,h5,h6,p {\n  margin: 0;\n  padding: 0;\n}\nh1 {\n  @include type(h1);\n}\nh2 {\n  @include type(h2);\n}\nh3 {\n  @include type(h3);\n}\nlabel {\n  @include type(strong);\n}\na {\n  color: color(blue-link);\n  text-decoration: none;\n  cursor: pointer;\n  display: inline-block;\n}\n","$colors: (\n  blue-clio: #0075bb,\n  blue-nav: #001C37,\n  blue-link: #0070E0,\n  blue-focus: #9ED8FF,\n  blue-bright: #089CFF,\n  grey-100: #F4F7F9,\n  grey-200: #DEE6EA,\n  grey-300: #CCD9E0,\n  grey-400: #90A6BC,\n  grey-500: #576C82,\n  grey-600: #2C3D4E,\n  red: #E41B28,\n  orange: #FDAA1E,\n  green: #339931,\n  white: #fff\n);\n\n// Function for setting color in a declaration - e.g. background-color: color(grey-100);\n@function color($color-name) {\n  @return map-get($colors, $color-name);\n}\n",".button {\n  border: 1px solid color(blue-bright);\n  border-radius: 4px;\n  padding: 0 spacing(m);\n  height: $input-height;\n  line-height: $input-height - 2;\n  font-family: $font-family;\n  font-weight: type-weight(regular);\n  color: color(white);\n  background: color(blue-bright);\n  align-items: center;\n  font-size: 14px;\n  cursor: pointer;\n  &:focus {\n    @include focus;\n  }\n}\n\n.button__small {\n  height: $input-height-small;\n  line-height: $input-height-small - 2px;\n  font-size: 13px;\n}\n","// Borders\n$border-radius: 4px;\n$border-light-color: color(grey-200);\n$border-dark-color: color(grey-300);\n$border-light: 1px solid color(grey-200);\n$border-dark: 1px solid color(grey-300);\n\n//Shadows\n$card-shadow: 0 3px 5px 0 rgba(44,61,78,0.05);\n\n//Inputs\n$input-height: 32px;\n$input-height-small: 24px;\n$input-margin: spacing(l);\n\n// Avatar\n$avatar-size: 28px;\n$avatar-picture-margin: spacing(s);\n","@mixin focus {\n  outline: 0;\n  border: 1px solid color(blue-focus);\n  box-shadow: 0 0 0 3px rgba(158,216,255,1);\n}\n\n@mixin placeholder {\n  color: color(grey-400);\n}\n","input[type=\"text\"],\ninput[type=\"password\"],\ntextarea {\n  border: $border-dark;\n  border-radius: $border-radius;\n  background: color(white);\n  padding: 0 spacing(s);\n  font-family: $font-family;\n  @include type(body);\n  width: 100%;\n  &:focus {\n    @include focus;\n\n  }\n  &::placeholder {\n    @include placeholder;\n  }\n}\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  height: $input-height;\n}\ntextarea {\n  padding-top: spacing(s);\n  padding-bottom: spacing(s);\n}\n",".card {\n  border: $border-dark;\n  background: color(white);\n  border-radius: $border-radius;\n  box-shadow: $card-shadow;\n  padding: spacing(l);\n  margin-bottom: spacing(l);\n}\n.card-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: spacing(l);\n  h1 {\n    flex: 1 1 auto\n  }\n  a {\n    flex: 0 0 auto;\n  }\n}\n",".avatar {\n  display: flex;\n  align-items: center;\n}\n\n.avatar-info {\n  display: 1 1 auto;\n}\n\n.avatar-picture {\n  display: 0 0 auto;\n  width: $avatar-size;\n  height: $avatar-size;\n  border-radius: $avatar-size/2;\n  background: color(grey-600);\n  color: color(white);\n  align-items: center;\n  display: flex;\n  text-align: center;\n  font-weight: type-weight(bold);\n  justify-content: space-around;\n  margin-right: $avatar-picture-margin;\n}\n",".idea-detail-left-column {\n  flex: 1 1 auto;\n  input[type=\"text\"], textarea {\n    margin-bottom: $input-margin;\n  }\n  .idea-details-description-input {\n    height: 450px;\n  }\n  .idea-details-title-input {\n    // font-weight: type-weight(bold);\n    @include type(h1);\n  }\n}\n.idea-detail-right-column {\n  flex: 0 0 387px;\n  margin-left: spacing(l);\n}\n",".comment-text-area {\n  height: 145px;\n}\n.comment {\n  border-top: $border-light;\n  padding: spacing(l) 0;\n  &:last-of-type {\n    border-bottom: $border-light;\n    margin-bottom: spacing(l);\n  }\n}\n.comment-content {\n  margin-left: $avatar-size + $avatar-picture-margin;\n}\n","@import 'styles/colors';\n@import 'styles/spacing';\n@import 'styles/typography';\n@import 'styles/variables';\n@import 'styles/mixins';\n\n@import 'styles/button';\n@import 'styles/input';\n@import 'styles/card';\n@import 'styles/avatar';\n\n@import 'styles/idea-detail';\n@import 'styles/comments';\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  @include type(body);\n  font-family: $font-family;\n  margin: 0;\n  padding: 0;\n  background-color: color(grey-100);\n}\n\n#root {\n  height: 100vh;\n}\n\n.app-header {\n  display: flex;\n  align-items: center;\n  padding: 0 spacing(l);\n  height: 60px;\n  background-color: color(blue-nav);\n  color: color(white);\n  justify-content: space-between;\n  h1, a {\n    color: inherit;\n  }\n  .button {\n    margin-left: spacing(m);\n  }\n}\n.app-body {\n  padding: spacing(l);\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n}\n\n.sign-in-card {\n  width: 540px;\n  margin: 0 auto;\n}\n\ntable {\n  width: 100%;\n  border: $border-dark;\n  background: color(white);\n  border-collapse: collapse;\n  max-width: 1200px;\n  margin: 0 auto;\n  border-radius: $border-radius;\n  th, td {\n    text-align: left;\n    padding: spacing(s);\n    &:first-child {\n      padding-left: spacing(l);\n    }\n  }\n  th {\n    padding-top: spacing(m);\n    padding-bottom: spacing(m);\n    border-bottom: $border-light;\n  }\n  tr:hover td {\n    background: color(grey-100);\n  }\n}\n\n\n\n\n\n// OLd styles\n.component-draggable {\n  cursor: pointer;\n}\n\n.navigation {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.formnewidea {\n  border: 1px black solid;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 50px;\n}\n\n.formcontainer {\n  position: absolute;\n  left: 800px;\n}\n"]}