{"version":3,"sources":["Components/Ideas/Submissions.js","Components/Ideas/Ideas.js","Components/SignIn/Signin.js","Components/SignIn/SignUp.js","Components/Ideas/ideasForm.js","Components/Ideas/ideasShow.js","App.js","registerServiceWorker.js","index.js"],"names":["Submissions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submissions","deleteIdea","bind","assertThisInitialized","event","_this2","button","target","idKey","id","idea","parentNode","firstChild","nextSibling","textContent","axios","delete","data","name","then","response","console","log","catch","err","setState","filter","match","key","_this3","fetch","results","json","map","i","path","_id","react_default","a","createElement","className","Link","to","class","leader","onClick","reverse","React","Component","Ideas","title","description","submitting","handleChangeTitle","handleChangeLeader","handleChangeDescription","handleSubmit","value","preventDefault","post","prevState","el","body","Ideas_Submissions","SignIn","_ref","onRouteChange","type","placeholder","SignUp","signUpEmail","signUpPassword","onChange","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","onSignUp","IdeasForm","onSubmit","autofocus","IdeasShow","params","App","signIn","signedIn","route","user","isLoading","signInEmail","signInPassword","firstname","lastname","onTextboxChangeSignInEmail","onTextboxChangeSignInPassword","_this$state","email","password","BrowserRouter","Route","exact","component","render","SignIn_SignUp","ideasShow","ideasForm","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4811888a.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Submissions extends React.Component {\n\tconstructor(props) {\n    \tsuper(props);\n\t\t\tthis.state = {\n      \t\t\tsubmissions: '',\n    \t\t}\n\t  this.deleteIdea = this.deleteIdea.bind(this);\n\n\n   \t}\n\n\ndeleteIdea(event) {\n\tlet button = event.target;\n\tlet idKey = button.id;\n\tlet idea = button.parentNode.firstChild.nextSibling.textContent;\n\taxios.delete('https://mighty-springs-20769.herokuapp.com/api/ideas', {\n\t\tdata: { name: idea }\n\t\t})\n\t\t.then(response => {\n\t\t\tconsole.log(response, \"idea deleted.\")\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, \"idea not deleted.\")\n\t\t})\n\tconsole.log(idea);\n\t// this.setState({\n\t// \tsubmissions: \"poop\",\n\t// });\n\t// this.setState({\n\t// \tsubmissions: this.state.submissions.filter(newlist => this.state.submissions.key !== \"poop\"),\n\t// });\n\n\tthis.setState(() => ({\n\t\tsubmissions: this.state.submissions.filter(match => match.key !== idKey),\n\t}))\n}\n\n// use when testing locally\n\n\t// componentDidMount() {\n\t// // let deleteIdea = this.props.deleteIdea.bind(this);\n\n\n\n\t// fetch('http://localhost:3001/api/ideas')\n //   \t\t\t.then(results => {\n //   \t\t\t\treturn results.json();\n //   \t\t\t}).then(data => {\n //   \t\t\t\tlet submissions = data.map((idea, i) => {\n\t// \t\t        return(\n\n\t// \t\t          \t<div className=\"ideaSubmission\" key={i} id={idea.id}>\n\t// \t\t\t            <hr />\n\t// \t\t\t            <h2>{idea.name}</h2>\n\t// \t\t\t\t\t\t<h3>Leader: {idea.leader}</h3>\n\t// \t\t\t\t\t\t<p>Description: {idea.description} </p>\n\t// \t\t\t\t\t\t<button onClick={this.deleteIdea.bind(this)} id={i}>Delete</button>\n\t// \t\t          \t</div>\n\n\t// \t          )\n\n\t// \t\t    })\n\t// \t\t        this.setState({submissions: submissions});\n\t// \t\t  // console.log(submissions);\n\t// \t\t  console.log(this.state.submissions);\n //   \t\t\t})\n //   \t\t}\n\n   \t\t//  componentDidUpdate(prevProps, prevState) {\n\n\n\n   \t\t// \tfetch('http://localhost:3001/api/ideas')\n   \t\t// \t.then(results => {\n   \t\t// \t\treturn results.json();\n   \t\t// \t}).then(data => {\n   \t\t// \t\tlet submissions = data.map((idea, i) => {\n\t\t\t  //       return(\n\n\t\t\t  //         \t<div className=\"ideaSubmission\" key={i} id={idea.id}>\n\t\t\t\t //            <hr />\n\t\t\t\t //            <h2>{idea.name}</h2>\n\t\t\t\t\t// \t\t<h3>Leader: {idea.leader}</h3>\n\t\t\t\t\t// \t\t<p>Description: {idea.description} </p>\n\t\t\t\t\t// \t\t<button onClick={this.deleteIdea.bind(this)} id={i}>Delete</button>\n\t\t\t  //         \t</div>\n\n\t\t   //        )\n\t\t\t  //   })\n\t\t\t  // this.setState({submissions: submissions})\n\n   \t\t// \t})\n   \t\t// }\n\n\n\n\n\n\n\n\n\n\n // use when live on heroku\n   \t\tcomponentDidMount() {\n\n\n\n   \t\t\tfetch('https://mighty-springs-20769.herokuapp.com/api/ideas')\n   \t\t\t.then(results => {\n   \t\t\t\treturn results.json();\n   \t\t\t}).then(data => {\n   \t\t\t\tlet submissions = data.map((idea, i) => {\n             let path = \"/ideasShow/\" + idea._id;\n\t\t\t        return(\n\n\t\t\t          \t<tr className=\"ideaSubmission\" key={i} id={idea.id}>\n\t\t\t\t\t\t\t\t\t\t<td>\n                      <Link to={path}>\n                        <a>{idea.name}</a>\n                      </Link><br/>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"type-subdued type-small\">Owned by {idea.leader}</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-picture\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-picture\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-picture\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td><button onClick={this.deleteIdea.bind(this)} id={i} className=\"button button__small\">Delete</button></td>\n\t\t\t          \t</tr>\n\n\t\t          )\n\n\t\t\t    })\n\t\t\t        this.setState({submissions: submissions.reverse()});\n\t\t\t  // console.log(submissions);\n\t\t\t  console.log(this.state.submissions);\n   \t\t\t})\n   \t\t}\n\n   \t\t// componentDidUpdate() {\n   \t\t// \tlet deleteIdea = this.props.deleteIdea.bind(this);\n\n   \t\t// \tfetch('https://mighty-springs-20769.herokuapp.com/api/ideas')\n   \t\t// \t.then(results => {\n   \t\t// \t\treturn results.json();\n   \t\t// \t}).then(data => {\n   \t\t// \t\tlet submissions = data.map((idea) => {\n\t\t\t  //       return(\n\t\t\t  //         <div key={idea.results}>\n\t\t\t  //         \t<hr />\n\t\t\t  //           <h2>{idea.name}</h2>\n\t\t\t\t\t// \t<h3>Leader: {idea.leader}</h3>\n\t\t\t\t\t// \t<p>Description: {idea.description} </p>\n\t\t\t\t\t// \t<button onClick={deleteIdea} className=\"delete\">Delete</button>\n\t\t   //        </div>\n\t\t   //        )\n\t\t\t  //   })\n\t\t\t  // this.setState({submissions: submissions})\n   \t\t// \t})\n   \t\t//\n\n\n\n\n        render() {\n\n\n        \treturn (\n        \t<div className=\"Submissions\">\n\t      \t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Idea name</th>\n\t\t\t\t\t\t\t\t<th>Team</th>\n\t\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t\t</tr>\n\t      \t\t\t{this.state.submissions}\n\t      \t\t</table>\n        \t</div>\n        \t);\n        }\n      }\n\nexport default Submissions;\n","import React from 'react';\nimport Submissions from './Submissions.js';\nimport Draggable from 'react-draggable-component';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Ideas extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: '',\n\t\t\tleader: '',\n\t\t\tdescription: '',\n\t\t\tsubmitting: false\n\t\t};\n\t\tthis.handleChangeTitle = this.handleChangeTitle.bind(this);\n\t\tthis.handleChangeLeader = this.handleChangeLeader.bind(this);\n\t\tthis.handleChangeDescription = this.handleChangeDescription.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\t// this.deleteIdea = this.deleteIdea.bind(this);\n\t}\n\n\thandleChangeTitle(event) {\n    \tthis.setState({title: event.target.value});\n \t}\n\n \thandleChangeLeader(event) {\n    \tthis.setState({leader: event.target.value});\n \t}\n\n \thandleChangeDescription(event) {\n    \tthis.setState({description: event.target.value});\n \t}\n\n \thandleSubmit(event) {\n \t\tevent.preventDefault();\n \t\tthis.setState({\n \t\t\ttitle: event.target.value,\n \t\t\tleader: event.target.value,\n \t\t\tdescription: event.target.value,\n \t\t\tsubmitting: true\n \t\t});\n\n// use when testing w/ a local database\n\t// axios.post('http://localhost:3001/api/ideas', {\n // \t\tname: this.state.title,\n // \t\tleader: this.state.leader,\n // \t\tdescription: this.state.description\n // \t})\n // \t.then(response => {\n // \t\tconsole.log(response, 'idea noted!');\n // \t})\n // \t.catch(err => {\n // \t\tconsole.log(err, 'idea not noted god dammit');\n // \t})\n\t//  \tthis.setState({title: ''});\n\t//   \tthis.setState({leader: ''});\n\t//   \tthis.setState({description: ''});\n // \t}\n\n\n\n // use when connecting to heroku\n \taxios.post('https://mighty-springs-20769.herokuapp.com/api/ideas', {\n \t\tname: this.state.title,\n \t\tleader: this.state.leader,\n \t\tdescription: this.state.description\n \t})\n \t.then(response => {\n \t\tconsole.log(response, 'idea noted!');\n \t})\n \t.catch(err => {\n \t\tconsole.log(err, 'idea not noted god dammit');\n \t})\n\t \tthis.setState({title: ''});\n\t  \tthis.setState({leader: ''});\n\t  \tthis.setState({description: ''});\n \t}\n\n \tdeleteIdea(id) {\n\t \t\t\tconsole.log(\"click\");\n\t \t\t\tconsole.log(this.state);\n\n\t \t\t\t\tthis.setState(prevState => ({\n\t\t\t        submissions: this.state.submissions.filter(el => el !== id )\n\t\t\t    }));\n\t \t\t\taxios.delete('http://localhost:3001/api/ideas', {\n\t \t\t\t\tbody: {\n\t \t\t\t\t\tid: id,\n\t \t\t\t\t}\n\t \t\t\t})\n\t \t\t\t.then(response => {\n\t \t\t\t\tconsole.log(response, \"idea deleted.\")\n\t \t\t\t})\n\t \t\t\t.catch(err => {\n\t \t\t\t\tconsole.log(err, \"idea not deleted.\")\n\t \t\t\t})\n\t \t}\n\n\n \trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Submissions submitting={this.state.submitting} deleteIdea={this.deleteIdea} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Ideas;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SignIn = ({ onRouteChange }) => {\n\treturn (\n\t\t<div className=\"card sign-in-card\">\n\t\t\t<div class=\"card-title\"><h1>Login</h1></div>\n\t\t\t<input type=\"text\" placeholder=\"Email\" className=\"spacing-stack-m\"/>\n\t\t\t<input type=\"password\" placeholder=\"Password\" className=\"spacing-stack-m\"/>\n\t\t\t<Link to=\"/ideas\" className=\"button spacing-inline-m\">\n\t\t\t\tSign in\n\t\t\t</Link>\n\t\t\t<Link to=\"/signup\">\n\t\t\t\tSign up\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nexport default SignIn;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nclass SignUp extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\nonTextboxChangeSignUpEmail(event) {\n    this.setState({\n      signUpEmail: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignUpPassword(event) {\n    this.setState({\n      signUpPassword: event.target.value,\n    });\n  }\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"card sign-in-card\">\n\t\t\t\t<div class=\"card-title\"><h1>Sign up</h1></div>\n\t\t\t\t<input type=\"text\" placeholder=\"First name\" className=\"spacing-stack-m\"/>\n\t\t\t\t<input type=\"text\" placeholder=\"Last name\" className=\"spacing-stack-m\"/>\n\t\t\t\t<input type=\"text\" \n\t\t\t\t\t   placeholder=\"Email\" \n\t\t\t\t\t   className=\"spacing-stack-m\"\n\t\t\t\t\t   onChange={this.props.onTextboxChangeSignUpEmail}/>\n\t\t\t\t<input type=\"password\" \n\t\t\t\t\t   placeholder=\"Password\" \n\t\t\t\t\t   className=\"spacing-stack-m\"\n\t\t\t\t\t   onChange={this.props.onTextboxChangeSignUpPassword}/>\n\t\t\t\t<Link to=\"/ideas\" onClick={this.props.onSignUp} className=\"button spacing-inline-m\">\n\t\t\t\t\tSign up\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\tSign in\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SignUp;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass IdeasForm extends React.Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      title: '',\n      description: '',\n    };\n\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeTitle(event) {\n    this.setState({title: event.target.value});\n  }\n\n  handleChangeDescription(event) {\n    this.setState({description: event.target.value});\n  }\n\n\thandleSubmit(event) {\n    event.preventDefault();\n    axios.post('http://localhost:3001/api/ideas', {\n      name: this.state.title,\n      leader: this.state.leader,\n      description: this.state.description\n    }).then(response => {\n      console.log(response, 'idea noted!');\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n          <div className=\"idea-detail-left-column\">\n            <div className=\"card idea-details-card\">\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"What's your idea?\"\n                  autofocus=\"true\"\n                  className=\"idea-details-title-input\"\n                  value= {this.state.title}\n                  onChange={this.handleChangeTitle}\n                />\n                <textarea\n                  placeholder=\"Describe your idea\"\n                  className=\"idea-details-description-input\"\n                  value={this.state.description}\n                  onChange={this.handleChangeDescription}\n                >\n                </textarea>\n                <Link to=\"/ideas\" className=\"button spacing-inline-m\" onClick={this.handleSubmit}>\n                  Save idea\n                </Link>\n                <Link to=\"/ideas\">\n                  Cancel\n                </Link>\n              </form>\n            </div>\n          </div>\n\t\t\t\t\t<div className=\"idea-detail-right-column\">\n\t\t\t\t\t\t<div className=\"card team-card\">\n\t\t\t\t\t\t\t<div className=\"card-title\">\n\t\t\t\t\t\t\t\t<h1>Team</h1>\n\t\t\t\t\t\t\t\t<a>Add team members</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t<div className=\"avatar-picture\">\n\t\t\t\t\t\t\t\t\tC\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"avatar-info\">\n\t\t\t\t\t\t\t\t\t<strong>Cale Shapera</strong><br/>\n\t\t\t\t\t\t\t\t\t<span className=\"type-small type-subdued\">Owner</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n    );\n  }\n}\n\nexport default IdeasForm;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass IdeasShow extends React.Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n    };\n\n    this.id = props.match.params.id\n  }\n\n  render() {\n    return (\n      <div>\n        <p>showing stuff for user {this.id}</p>\n      </div>\n    );\n  }\n}\n\nexport default IdeasShow;\n","import React, { Component } from 'react';\nimport Ideas from './Components/Ideas/Ideas';\nimport SignIn from './Components/SignIn/Signin';\nimport SignUp from './Components/SignIn/SignUp';\nimport axios from 'axios';\n\nimport { Route, NavLink, BrowserRouter, Link } from 'react-router-dom';\n\nimport ideasForm from './Components/Ideas/ideasForm';\nimport ideasShow from './Components/Ideas/ideasShow';\n\n\nimport './App.scss';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n      this.state = {\n        route: 'signin',\n        user: {},\n        signedIn: false,\n        isLoading: true,\n        signInEmail: '',\n        signInPassword: '',\n        signUpEmail: '',\n        signUpPassword: '',\n        firstname: '',\n        lastname: ''\n        }\n    this.signIn = this.signIn.bind(this);\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n    this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n    this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n  }\n\n    onTextboxChangeSignInEmail(event) {\n    this.setState({\n      signInEmail: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignInPassword(event) {\n    this.setState({\n      signInPassword: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignUpEmail(event) {\n    this.setState({\n      signUpEmail: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignUpPassword(event) {\n    this.setState({\n      signUpPassword: event.target.value,\n    });\n  }\n\n  signIn = () => {\n   this.setState(prevState => ({\n    signedIn: !prevState.signedIn\n  }));\n    console.log(this.state.signedIn);\n  }\n\n  onSignUp() {\n    // Grab state\n    const {\n      signUpEmail,\n      signUpPassword,\n      firstname,\n      lastname\n    } = this.state;\n    this.setState({\n      isLoading: true,\n    });\n\n    console.log(\"attempting signup\");\n    console.log(this.state.firstname);\n    // Post request to backend\n    \n      axios.post('https://mighty-springs-20769.herokuapp.com/api/users/signup', {\n        email: signUpEmail,\n        password: signUpPassword,\n        firstname: firstname,\n        lastname: lastname\n      })\n      .then(response => {\n        console.log(response, 'new user added!');\n      })\n      .catch(err => {\n        console.log(err, 'something fucked happened');\n      })\n        this.setState({email: ''});\n        this.setState({password: ''});\n        this.setState({firstname: ''});\n        this.setState({lastname: ''});\n      }\n\n// use when testing w/ a local database\n  // axios.post('http://localhost:3001/api/ideas', {\n //     name: this.state.title,\n //     leader: this.state.leader,\n //     description: this.state.description\n //   })\n //   .then(response => {\n //     console.log(response, 'idea noted!');\n //   })\n //   .catch(err => {\n //     console.log(err, 'idea not noted god dammit');\n //   })\n  //    this.setState({title: ''});\n  //    this.setState({leader: ''});\n  //    this.setState({description: ''});\n //   }\n\n\n\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <header className=\"app-header\">\n            <h1><Link to=\"/ideas\">Clio Hackathon Forum</Link></h1>\n            <div className=\"cond-button\">\n\n              { //Check if message failed\n                (this.state.signedIn == false)\n                  ? <div><Link onClick={this.signIn} to=\"/ideas\" className=\"button\">Sign In</Link></div>\n                  : <div><Link onClick={this.signIn} to=\"/\">Sign Out</Link>\n                    <Link to=\"/ideasForm\" className=\"button\">New Idea</Link></div>\n              }\n\n            </div>\n          </header>\n          <div className=\"app-body\">\n            <Route exact path=\"/\" component={SignIn}/>\n           \n\n            <Route\n              path='/signup'\n              render={(props) => <SignUp \n                onSignUp={this.onSignUp} \n                onTextboxChangeSignUpEmail={this.onTextboxChangeSignUpEmail}\n                onTextboxChangeSignUpPassword={this.onTextboxChangeSignUpPassword}\n                />}\n            />\n\n\n            <Route path=\"/ideas\" component={Ideas}/>\n            <Route path=\"/ideasShow/:id\" component={ideasShow}/>\n            <Route path=\"/ideasForm\" component={ideasForm}/>\n          </div>\n        </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}